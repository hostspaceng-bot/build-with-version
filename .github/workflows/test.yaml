on:
  push:
    branches:
      - main

env:
  GITVERSION: 'gittools/gitversion:5.10.0-alpine.3.14-6.0'
  GITVERSION_TAG_PROPERTY_MAIN: .MajorMinorPatch

jobs:
  gitversion-and-build:
    name: GitVersion and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Fetch all history for all tags and branches
        run: git fetch --unshallow && git checkout main

      - name: Calculate changed services
        id: calculate_changed_services
        run: |
          # Calculate changed services logic from the original workflow

      - name: Calculate service versions
        id: calculate_service_versions
        run: |
          # Calculate service versions logic from the original workflow

      - name: Build and Push Docker Images
        run: |
          # Build and push Docker images to Docker Hub
          DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}
          changed_services=( ${{ fromJSON(steps.calculate_changed_services.outputs.changed_services) }} )
          for svc in "${changed_services[@]}"; do
            echo "building and pushing image for ${svc}"
            svc_without_prefix=$(echo "${svc}" | sed "s|^apps/||")
            full_service_version="${svc_without_prefix}/v${full_service_version}"

            # Build the Docker image
            docker build -t ${DOCKERHUB_USERNAME}/${svc_without_prefix}:${full_service_version} "${svc}"

            # Log in to Docker Hub
            echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

            # Push the Docker image to Docker Hub
            docker push ${DOCKERHUB_USERNAME}/${svc_without_prefix}:${full_service_version}
          done
